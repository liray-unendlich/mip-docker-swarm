version: "3.5"
services:
  ### WE NEED CHANGE ALL constraints for single servers(like indexer-goerli/indexer-avax...)
  ### SO, it should be constraints: [node.name == indexer-${CHAIN_N}]
  ############################################################################
  #                           POSTGRES - Database                            #
  ############################################################################
  postgres:
    image: postgres:13.6
    user: $USER_ID:$GROUP_ID
    command:
      - "postgres"
      - "-cshared_preload_libraries=pg_stat_statements"
    environment:
      PGDATA: /var/lib/postgresql/data
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: "${DB_USER}"
      POSTGRES_PASSWORD: "${DB_PASSWORD}"
      TZ: Asia/Tokyo
    volumes:
      - ../data/postgres:/var/lib/postgresql/data
    # Swarm
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - node.role == manager
      labels:
        - traefik.enable=false
      resources:
        reservations:
          cpus: "0.1"
          memory: 1024M
    networks:
      - default
      - monitor

  ############################################################################
  #                      postgres-exporter - Export data                     #
  ############################################################################

  postgres-exporter:
    image: quay.io/prometheuscommunity/postgres-exporter
    environment:
      DATA_SOURCE_NAME: "postgresql://${DB_USER}:${DB_PASSWORD}@postgres:5432/${DB_NAME}"
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - node.role == manager
      labels:
        - traefik.enable=false
    networks:
      - default
      - monitor

  ############################################################################
  #                    GRAPHNODES - indexering and query                     #
  ############################################################################

  query-node:
    image: graphprotocol/graph-node:${GRAPH_NODE_VERSION:-v0.29.0}
    environment:
      GRAPH_NODE_CONFIG: /var/config/config.toml
      postgres_host: "postgres"
      postgres_db: "${DB_NAME}"
      postgres_user: "${DB_USER}"
      postgres_pass: "${DB_PASSWORD}"
      ipfs: "${IPFS_ENDPOINT:-https://ipfs.network.thegraph.com}"
      node_id: "query_node_${CHAIN_NAME}"
      node_role: "query-node"
      RUST_LOG: INFO
      GRAPH_LOG: INFO
      GRAPH_ETH_CALL_GAS: 50000000
      GRAPH_GETH_ETH_CALL_ERRORS: "out of gas"
      GRAPH_MAX_GAS_PER_HANDLER: 1000000000000000
      EXPERIMENTAL_SUBGRAPH_VERSION_SWITCHING_MODE: synced
      GRAPH_KILL_IF_UNRESPONSIVE: "true"
      DISABLE_BLOCK_INGESTOR: "true"
      GRAPH_LOG_QUERY_TIMING: ${GRAPH_LOG_QUERY_TIMING:-gql}
      GRAPH_ALLOW_NON_DETERMINISTIC_FULLTEXT_SEARCH: ${FULLTEXT_SEARCH:-true}
      TZ: Asia/Tokyo
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"
    configs:
      - source: ${CHAIN_CONF_NAME}
        target: /var/config/config.toml
    networks:
      - default
      - monitor
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      labels:
        - traefik.enable=false

  index-node-0:
    image: graphprotocol/graph-node:${GRAPH_NODE_VERSION:-v0.29.0}
    environment:
      GRAPH_NODE_CONFIG: /var/config/config.toml
      BLOCK_INGESTOR: "index_node_0"
      postgres_host: "postgres"
      postgres_db: "${DB_NAME}"
      postgres_user: "${DB_USER}"
      postgres_pass: "${DB_PASSWORD}"
      ipfs: "${IPFS_ENDPOINT:-https://ipfs.network.thegraph.com}"
      GRAPH_KILL_IF_UNRESPONSIVE: "true"
      node_role: "index-node"
      node_id: "index_node_0"
      NODE_ID: "index_node_0"
      RUST_LOG: INFO
      GRAPH_LOG: ${GRAPH_NODE_LOGLEVEL:-DEBUG}
      STORE_CONNECTION_POOL_SIZE: ${STORE_CONNECTION_POOL_SIZE:-10}
      ETHEREUM_TRACE_STREAM_STEP_SIZE: ${ETHEREUM_TRACE_STREAM_STEP_SIZE:-50}
      ETHEREUM_BLOCK_BATCH_SIZE: ${ETHEREUM_BLOCK_BATCH_SIZE:-100}
      ETHEREUM_RPC_MAX_PARALLEL_REQUESTS: ${ETHEREUM_RPC_MAX_PARALLEL_REQUESTS:-64}
      GRAPH_ETHEREUM_MAX_BLOCK_RANGE_SIZE: ${GRAPH_ETHEREUM_MAX_BLOCK_RANGE_SIZE:-500}
      GRAPH_ETHEREUM_TARGET_TRIGGERS_PER_BLOCK_RANGE: ${GRAPH_ETHEREUM_TARGET_TRIGGERS_PER_BLOCK_RANGE:-200}
      GRAPH_ALLOW_NON_DETERMINISTIC_FULLTEXT_SEARCH: "true"
      TZ: Asia/Tokyo
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"
    configs:
      - source: ${CHAIN_CONF_NAME}
        target: /var/config/config.toml
    # Swarm
    networks:
      - default
      - monitor
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager

  index-node-1:
    image: graphprotocol/graph-node:${GRAPH_NODE_VERSION:-v0.29.0}
    environment:
      GRAPH_NODE_CONFIG: /var/config/config.toml
      DISABLE_BLOCK_INGESTOR: "true"
      postgres_host: "postgres"
      postgres_db: "${DB_NAME}"
      postgres_user: "${DB_USER}"
      postgres_pass: "${DB_PASSWORD}"
      ipfs: "${IPFS_ENDPOINT:-https://ipfs.network.thegraph.com}"
      GRAPH_KILL_IF_UNRESPONSIVE: "true"
      node_role: "index-node"
      node_id: "index_node_1"
      NODE_ID: "index_node_1"
      RUST_LOG: INFO
      GRAPH_LOG: ${GRAPH_NODE_LOGLEVEL:-DEBUG}
      STORE_CONNECTION_POOL_SIZE: ${STORE_CONNECTION_POOL_SIZE:-10}
      ETHEREUM_TRACE_STREAM_STEP_SIZE: ${ETHEREUM_TRACE_STREAM_STEP_SIZE:-50}
      ETHEREUM_BLOCK_BATCH_SIZE: ${ETHEREUM_BLOCK_BATCH_SIZE:-100}
      ETHEREUM_RPC_MAX_PARALLEL_REQUESTS: ${ETHEREUM_RPC_MAX_PARALLEL_REQUESTS:-64}
      GRAPH_ETHEREUM_MAX_BLOCK_RANGE_SIZE: ${GRAPH_ETHEREUM_MAX_BLOCK_RANGE_SIZE:-500}
      GRAPH_ETHEREUM_TARGET_TRIGGERS_PER_BLOCK_RANGE: ${GRAPH_ETHEREUM_TARGET_TRIGGERS_PER_BLOCK_RANGE:-200}
      GRAPH_ALLOW_NON_DETERMINISTIC_FULLTEXT_SEARCH: "true"
      TZ: Asia/Tokyo
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"
    configs:
      - source: ${CHAIN_CONF_NAME}
        target: /var/config/config.toml
    # Swarm
    networks:
      - default
      - monitor
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager

networks:
  default:
    name: indexer_default
  monitor:
    external: true
configs:
  ${CHAIN_CONF_NAME}:
    external: true
