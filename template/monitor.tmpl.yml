version: "3.5"
services:
  ############################################################################
  #                                MONITORING                                #
  ############################################################################

  prometheus:
    image: prom/prometheus
    user: $USER_ID:$GROUP_ID
    command:
      - "--log.level=warn"
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
    volumes:
      - ../data/prometheus:/prometheus
    # Swarm
    networks:
      - default
      - monitor
      - traefik-public
    configs:
      - source: ${PROMETHEUS_CONF_NAME}
        target: /etc/prometheus/prometheus.yml
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      resources:
        limits:
          memory: 2048M
        reservations:
          memory: 128M
      # Traefik
      labels:
        - traefik.enable=true
        - traefik.docker.network=traefik-public
        - traefik.constraint-label=traefik-public
        - traefik.http.routers.prometheus.middlewares=authelia@docker
        - traefik.https.routers.prometheus.rule=Host(`${PROMETHEUS_DOMAIN}`)
        - traefik.http.routers.prometheus.entrypoints=https
        - traefik.http.routers.prometheus.tls=true
        - traefik.http.routers.prometheus.tls.certresolver=le
        - traefik.http.services.prometheus.loadbalancer.server.port=9090

  grafana:
    image: grafana/grafana
    user: $USER_ID:$GROUP_ID
    environment:
      postgres_host: "postgres:5432"
      postgres_db: "${DB_NAME}"
      postgres_user: "${DB_USER}"
      postgres_pass: "${DB_PASSWORD}"
      GF_SERVER_ROOT_URL: https://${GRAFANA_DOMAIN}
      GF_SERVER_DOMAIN: ${GRAFANA_DOMAIN}
    volumes:
      - ../grafana:/etc/grafana/
      - ../data/grafana:/var/lib/grafana
    # Swarm
    networks:
      - default
      - monitor
      - traefik-public
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M
      labels:
        - traefik.enable=true
        - traefik.docker.network=traefik-public
        - traefik.constraint-label=traefik-public
        - traefik.http.routers.grafana.middlewares=authelia@docker
        - traefik.https.routers.grafana.rule=Host(`${GRAFANA_DOMAIN}`)
        - traefik.http.routers.grafana.entrypoints=https
        - traefik.http.routers.grafana.tls=true
        - traefik.http.routers.grafana.tls.certresolver=le
        - traefik.http.services.grafana.loadbalancer.server.port=3000

  ############################################################################
  #                      node-exporter - Export data                         #
  ############################################################################

  node-exporter:
    image: prom/node-exporter
    # Swarm
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - node.hostname == indexer-manager
      labels:
        - traefik.enable=false
    networks:
      - default
      - monitor

networks:
  default:
    name: monitor_default
  monitor:
    external: true
  traefik-public:
    external: true
configs:
  ${PROMETHEUS_CONF_NAME}:
    external: true
