version: "3.5"
services:
  ############################################################################
  #                                MONITORING                                #
  ############################################################################

  prometheus:
    image: prom/prometheus
    user: $USER_ID:$GROUP_ID
    command:
      - "--log.level=warn"
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
    volumes:
      - ../data/prometheus:/prometheus
    # Swarm
    networks:
      - default
      - monitor
      - traefik-public
    configs:
      - source: ${PROMETHEUS_CONF_NAME}
        target: /etc/prometheus/prometheus.yml
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      resources:
        limits:
          memory: 2048M
        reservations:
          memory: 128M
      # Traefik
      labels:
        - traefik.enable=true
        - traefik.docker.network=traefik-public
        - traefik.constraint-label=traefik-public
        - "traefik.http.routers.monitor-prometheus.rule=Host(`prometheus.${ROOT_DOMAIN}`)"
        - traefik.http.routers.monitor-prometheus.entrypoints=https
        - traefik.http.routers.monitor-prometheus.tls=true
        - traefik.http.routers.monitor-prometheus.tls.certresolver=le
        - traefik.http.services.monitor-prometheus.loadbalancer.server.port=9090
        - traefik.http.routers.monitor-prometheus.middlewares=prometheus-auth
        - traefik.http.middlewares.prometheus-auth.basicauth.users=${PROMETHEUS_USER}:${PROMETHEUS_HASHED_PASSWORD}

  grafana:
    image: grafana/grafana
    user: $USER_ID:$GROUP_ID
    environment:
      postgres_host: "postgres:5432"
      postgres_db: "${DB_NAME}"
      postgres_user: "${DB_USER}"
      postgres_pass: "${DB_PASSWORD}"
    volumes:
      - ../grafana:/etc/grafana/
      - ../data/grafana:/var/lib/grafana
    # Swarm
    networks:
      - default
      - monitor
      - traefik-public
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M
      labels:
        - traefik.enable=true
        - traefik.docker.network=traefik-public
        - traefik.constraint-label=traefik-public
        - "traefik.http.routers.monitor-grafana.rule=Host(`grafana.${ROOT_DOMAIN}`)"
        - traefik.http.routers.monitor-grafana.entrypoints=https
        - traefik.http.routers.monitor-grafana.tls=true
        - traefik.http.routers.monitor-grafana.tls.certresolver=le
        - traefik.http.services.monitor-grafana.loadbalancer.server.port=3000

networks:
  default:
    name: monitor_default
  monitor:
    external: true
  traefik-public:
    external: true
configs:
  ${PROMETHEUS_CONF_NAME}:
    external: true
